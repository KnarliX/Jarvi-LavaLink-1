FROM azul/zulu-openjdk-alpine:17-jre-headless-latest

# Install necessary packages
RUN apk add --no-cache libgcc curl bash

# Setup working directory
WORKDIR /opt/Lavalink

# Create application.yml directly in the container
RUN echo 'server:\n  port: ${SERVER_PORT:80}\n  address: 0.0.0.0\nlavalink:\n  server:\n    password: ${LAVALINK_SERVER_PASSWORD:Jarvi1.0}\n    sources:\n      youtube: true\n      bandcamp: true\n      soundcloud: true\n      twitch: true\n      vimeo: true\n      http: true\n      local: true\n    bufferDurationMs: 300\n    frameBufferDurationMs: 3000\n    opusEncodingQuality: 7\n    resamplingQuality: LOW\n    trackStuckThresholdMs: 10000\n    youtubePlaylistLoadLimit: 6\n    playerUpdateInterval: 5\n    youtubeSearchEnabled: true\n    soundcloudSearchEnabled: true\nlogging:\n  file:\n    path: ./logs/\n  level:\n    root: WARN\n    lavalink: INFO' > application.yml

# Download the latest Lavalink.jar
RUN curl -L https://github.com/lavalink-devs/Lavalink/releases/latest/download/Lavalink.jar -o Lavalink.jar

# Create plugins and logs directories
RUN mkdir -p plugins logs

# Create start script
RUN echo '#!/bin/bash\n\n# Set memory constraints for render.com free tier\nexport _JAVA_OPTIONS="-Xmx512m -Xms128m ${_JAVA_OPTIONS}"\n\n# Set port handling for render.com\nif [ -n "$PORT" ]; then\n    export SERVER_PORT=$PORT\nfi\n\necho "Starting Jarvi Lavalink server..."\necho "Using port: ${SERVER_PORT:-80}"\necho "Using memory settings: ${_JAVA_OPTIONS}"\n\n# Start Lavalink\nexec java -Djdk.tls.client.protocols=TLSv1.1,TLSv1.2 -jar Lavalink.jar' > start.sh && chmod +x start.sh

# Add health check script
RUN echo '#!/bin/sh\ncurl -f http://localhost:${SERVER_PORT:-80}/version || exit 1' > /healthcheck.sh && \
    chmod +x /healthcheck.sh

# Set up the health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 CMD /healthcheck.sh

# Expose the server port
EXPOSE ${SERVER_PORT:-80}

# Run Lavalink with appropriate memory settings for render.com free tier
CMD ["./start.sh"]